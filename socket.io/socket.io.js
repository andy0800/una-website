/*!
 * Socket.IO client v4.7.2
 * (c) 2014-2022 Guillermo Rauch
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).io=t()}(this,function(){"use strict";var e,t,n;e=self,t=function(){function e(e,t,n){this.uri=e,this.namespace=t,this.opts=n,this.sockets={},this.ids=0}return e.prototype.connect=function(e,t){var n=this;void 0===e&&(e="/");var r=this.opts;r.uri=this.uri,r.namespace=e,this.sockets[e]=new t(r).connect(),this.sockets[e].on("connect",function(){n.ids++}),t&&(this.sockets[e].on("disconnect",function(){delete n.sockets[e]}))},e.prototype.socket=function(e){return this.sockets[e]||this.connect(e),this.sockets[e]},e}();var n=function(){function e(e){this.uri=e.uri,this.namespace=e.namespace,this.opts=e,this.connected=!1,this.disconnected=!0}return e.prototype.connect=function(){var e=this;return new Promise(function(t,n){try{e.connected=!0,e.disconnected=!1,e.emit("connect"),t()}catch(r){n(r)}})},e.prototype.disconnect=function(){this.connected=!1,this.disconnected=!0,this.emit("disconnect")},e.prototype.emit=function(e,t){if(this.connected){var n=document.createEvent("Event");n.initEvent(e,!0,!0),n.data=t,document.dispatchEvent(n)}},e.prototype.on=function(e,t){document.addEventListener(e,t)},e.prototype.off=function(e,t){document.removeEventListener(e,t)},e}();return function(e){return new t(e).socket("/")}});
